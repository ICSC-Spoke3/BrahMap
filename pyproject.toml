[build-system]
requires = [
    "setuptools",
    "setuptools_scm",
    "mpi4py",         # `mpi4py` is needed to use `mpi4py.get_include()` in `setup.py`
]

build-backend = "setuptools.build_meta"

[project]
name = "brahmap"
version = "0.2.0"
description = "A scalable and modular map-making framework for the future CMB experiments"
authors = [
    { name = "Avinash Anand", email = "avinash.anand@roma2.infn.it" },
    { name = "Giuseppe Puglisi" },
]
keywords = [
    "brahmap",
    "cmb",
    "sky map",
    "map-maker",
    "map-making",
    "GLS",
    "destriper",
]
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.9,<3.13"
dependencies = [
    "numpy",
    "scipy",
    "healpy",
    "mpi4py",
    "ruff",
    "pre-commit",
    "pytest",
    "mkdocs",
    "mkdocstrings",
    "mkdocstrings-python",
    "mkdocs-material",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: C++",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Astronomy",
]

[project.urls]
Repository = "https://github.com/anand-avinash/BrahMap"
Documentation = "https://anand-avinash.github.io/BrahMap/"
Issues = "https://github.com/anand-avinash/BrahMap/issues"
# Changelog = 

[tool.setuptools.packages.find]
where = ["."]
include = ["brahmap*"]
namespaces = false

[tool.pytest.ini_options]
norecursedirs = ["extern"]
# addopts = "-ra -q" # options for pytest
# testpaths = ["brahmap/tests"] # directory to look for the test functions and modules

[tool.setuptools_scm]
# Keeping this enables setuptools_scm to keep all the files tracked by git under the package being installed (see `[tool.setuptools]`), to be included in the package. To include or exclude any other file, use MANIFEST.in

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
# ignore = ["E741", "E731", ]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
